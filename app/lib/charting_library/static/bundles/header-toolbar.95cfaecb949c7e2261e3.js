webpackJsonp([18], { 1085: function (e, t) { e.exports = { group: 'group-wWM3zP_M-', noLeftDecoration: 'noLeftDecoration-15F5a1TB-', noRightDecoration: 'noRightDecoration-2GcAAgVb-', noMinimalWidth: 'noMinimalWidth-1sbl_ff5-' }; },
  1086: function (e, t) { e.exports = { 'css-value-header-toolbar-height': '38px', wrap: 'wrap-3tiHesTk-' }; },
  1087: function (e, t) { e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 17 17" width="17" height="17"><path fill="none" stroke="currentColor" d="M1 1l15 15M1 16L16 1"/></svg>'; },
  1088: function (e, t) { e.exports = { wrap: 'wrap-3K4w_7te-', icon: 'icon-1dNdRXKB-' }; },
  1089: function (e, t) { e.exports = { wrap: 'wrap-1GG7GnNO-', scrollWrap: 'scrollWrap-1icOiezT-', noScrollBar: 'noScrollBar-2zw2auFK-', content: 'content-3_f7yH29-', icon: 'icon-2fZsO52g-', scrollLeft: 'scrollLeft-3OUcqYWy-', scrollRight: 'scrollRight-UDsPWprP-', isVisible: 'isVisible-zZk7F7wr-', iconWrap: 'iconWrap-1U8J-Qkw-', fadeLeft: 'fadeLeft-31arUEZY-', fadeRight: 'fadeRight-36gcjOQb-' }; },
  1090: function (e, t) { e.exports = { fake: 'fake-37paHC6T-', inner: 'inner-v8eiKwdM-', subGroup: 'subGroup-1JpgB9zD-', fill: 'fill-2axUON87-', minimalPriority: 'minimalPriority-1MGEuVHu-', button: 'button-3xrjDzA4-', iconButton: 'iconButton-3vyD3BPg-', hidden: 'hidden-2kSvETGo-', symbolSearch: 'symbolSearch-3I4QF1U_-' }; },
  1091: function (e, t) { e.exports = { 'css-value-header-toolbar-height': '38px', toolbar: 'toolbar-2n2cwgp5-', isHidden: 'isHidden-GTob3P_C-', overflowWrap: 'overflowWrap-PWdgT-U_-', customButton: 'customButton--jqJTfH5-', hovered: 'hovered-1mGRUp3y-' }; },
  700: function (e, t, n) {
    function i(e) { let t; const n = e.children; const i = e.className; const a = e.noLeftDecoration; const o = e.noRightDecoration; const r = e.noMinimalWidth; return u.createElement('div', { className: m(i, M.group, (t = {}, t[M.noMinimalWidth] = r, t[M.noLeftDecoration] = a, t[M.noRightDecoration] = o, t)) }, n); } function a(e) { return u.createElement(L.a, c.a({}, e, { forceInteractive: !0, icon: B })); } function o(e) { return u.createElement('div', { className: N.wrap }, u.createElement(k.a, { className: N.icon, icon: x }), V.text); } function r(e) { return [e.findIndex((e) => { return u.isValidElement(e) && !!e.key && (`${e.key}`).indexOf('view-only-badge') !== -1; }), e.findIndex((e) => { return u.isValidElement(e) && !!e.key && (`${e.key}`).indexOf('blue-screenshot') !== -1; }), e.findIndex((e) => { return u.isValidElement(e) && !!e.key && (`${e.key}`).indexOf('popup') !== -1; })].filter((e) => { return e >= 0; }).forEach((t) => { e = u.Children.map(e, (e, n) => { let i; let a; let o; if (u.isValidElement(e)) switch ([t - 1, t, t + 1].indexOf(n)) { case 0: i = { noRightDecoration: !0 }, e = u.cloneElement(e, i); break; case 1: a = { noLeftDecoration: !0, noRightDecoration: !0 }, e = u.cloneElement(e, a); break; case 2: o = { noLeftDecoration: !0 }, e = u.cloneElement(e, o); } return e; }); }), e; } function s(e) { void 0 === e && (e = []); let t = e.map((e) => { return se[e]; }) || [S.STYLE_CANDLES, S.STYLE_RENKO, S.STYLE_KAGI, S.STYLE_PNF]; return Object(E.isOnFeaturePage)() && !y.enabled('charting_library_base') && (t = []), y.enabled('widget') && (t = [S.STYLE_BARS, S.STYLE_CANDLES, S.STYLE_AREA]), t; } function l(e) { return void 0 === e && (e = []), Object(Q.mergeResolutions)(e, y.enabled('star_some_intervals_by_default') ? le : []); }
    let c; let d; let u; let h; let p; let m; let f; let v; let y; let b; let S; let E; let _; let g; let w; let C; let M; let W; let R; let L; let B; let k; let N; let x; let V; let T; let A; let O; let I; let F; let D; let P; let j; let H; let z; let G; let Y; let U; let K; let J; let Q; let q; let X; let Z; let ee; let te; let ne; let ie; let ae; let oe; let re; let se; let le; let ce; let de; let ue; Object.defineProperty(t, '__esModule', { value: !0 }), c = n(1), d = n(14), u = n(20), h = n(105), p = n(313), m = n(103), f = n(301), v = n.n(f), y = n(5), b = n(31), S = n(40), E = n(71), _ = n(205), g = n.n(_), w = n(127), C = n(107), M = n(1085), W = n(1086), R = (function (e) { function t() { const t = e !== null && e.apply(this, arguments) || this; return t._handleMeasure = function (e) { const n = e.width; t.props.onWidthChange(n); }, t; } return c.c(t, e), t.prototype.render = function () { const e = this.props.children; return u.createElement(p, { onMeasure: this._handleMeasure, whitelist: ['width'] }, u.createElement('div', { className: W.wrap }, e)); }, t; }(u.PureComponent)), L = n(848), B = n(1087), n(11), k = n(300), N = n(1088), x = n(885), V = { text: window.t('View Only Mode') }, T = n(59), A = n(194), O = n(1089), I = n(184), F = n(990), D = n(38), P = (function (e) {
      function t(t) { const n = e.call(this, t) || this; return n._wrapMeasureRef = null, n._contentMeasureRef = null, n._handleScrollLeft = function () { n.animateTo(Math.max(0, n.currentPosition() - (n.state.widthWrap - 50))); }, n._handleScrollRight = function () { n.animateTo(Math.min((n.state.widthContent || 0) - (n.state.widthWrap || 0), n.currentPosition() + (n.state.widthWrap - 50))); }, n._handleResizeWrap = function (e) { const t = e.width; n.setState({ widthWrap: t }), n._checkButtonsVisibility(); }, n._handleResizeContent = function (e) { const t = e.width; n.setState({ widthContent: t }); }, n._handleScroll = function () { const e = n.props.onScroll; e && e(n.currentPosition(), n.isAtLeft(), n.isAtRight()), n._checkButtonsVisibility(); }, n._checkButtonsVisibility = function () { let e; let t; let i; let a; let o; (n.props.isVisibleButtons || n.props.isVisibleFade) && (e = n.state, t = e.isVisibleLeftButton, i = e.isVisibleRightButton, a = n.isAtLeft(), o = n.isAtRight(), a || t ? a && t && n.setState({ isVisibleLeftButton: !1 }) : n.setState({ isVisibleLeftButton: !0 }), o || i ? o && i && n.setState({ isVisibleRightButton: !1 }) : n.setState({ isVisibleRightButton: !0 })); }, n._setWrapMeasureRef = function (e) { n._wrapMeasureRef = e; }, n._setContentMeasureRef = function (e) { n._contentMeasureRef = e; }, n.state = { widthContent: 0, widthWrap: 0, isVisibleRightButton: !1, isVisibleLeftButton: !1 }, n; } return c.c(t, e), t.prototype.componentDidMount = function () { this._checkButtonsVisibility(); }, t.prototype.componentDidUpdate = function (e, t) { t.widthWrap === this.state.widthWrap && t.widthContent === this.state.widthContent || this._handleScroll(), this.props.shouldMeasure && this._wrapMeasureRef && this._contentMeasureRef && (this._wrapMeasureRef.measure(), this._contentMeasureRef.measure()); }, t.prototype.currentPosition = function () { return this._scroll ? D.IS_RTL ? Object(D.getLTRScrollLeft)(this._scroll) : this._scroll.scrollLeft : 0; }, t.prototype.isAtLeft = function () { return this.currentPosition() <= 1; }, t.prototype.isAtRight = function () { return this.currentPosition() + this.state.widthWrap >= this.state.widthContent - 1; }, t.prototype.animateTo = function (e, t) {
        if (void 0 === t && (t = I.dur), this._scroll) {
          D.IS_RTL && (e = Object(D.getLTRScrollLeftOffset)(this._scroll, e)); const n = T.findDOMNode(this._scroll); Object(A.doAnimate)({ onStep: function (e, t) { n.scrollLeft = Math.round(t); },
            from: n.scrollLeft,
            to: Math.round(e),
            easing: I.easingFunc.easeInOutCubic,
            duration: t });
        }
      }, t.prototype.render = function () { let e; let t; let n; let i; let a; const o = this; const r = this.props; const s = r.children; const l = r.isVisibleScrollbar; const c = r.isVisibleFade; const d = r.isVisibleButtons; const h = r.shouldMeasure; const f = this.state; const v = f.widthContent; const y = f.widthWrap; const b = f.isVisibleRightButton; const S = f.isVisibleLeftButton; return u.createElement(p, { whitelist: ['width'], onMeasure: this._handleResizeWrap, shouldMeasure: h, ref: this._setWrapMeasureRef }, u.createElement('div', { className: O.wrap }, u.createElement('div', { className: m(O.scrollWrap, (e = {}, e[O.noScrollBar] = !l, e)), onScroll: this._handleScroll, ref: function (e) { return o._scroll = e; } }, u.createElement(p, { onMeasure: this._handleResizeContent, whitelist: ['width'], shouldMeasure: h, ref: this._setContentMeasureRef }, u.createElement('div', { className: O.content }, s))), c && u.createElement('div', { className: m(O.fadeLeft, (t = {}, t[O.isVisible] = S && v > y, t)) }), c && u.createElement('div', { className: m(O.fadeRight, (n = {}, n[O.isVisible] = b && v > y, n)) }), d && u.createElement('div', { className: m(O.scrollLeft, (i = {}, i[O.isVisible] = S && v > y, i)), onClick: this._handleScrollLeft }, u.createElement('div', { className: O.iconWrap }, u.createElement(k.a, { icon: F, className: O.icon }))), d && u.createElement('div', { className: m(O.scrollRight, (a = {}, a[O.isVisible] = b && v > y, a)), onClick: this._handleScrollRight }, u.createElement('div', { className: O.iconWrap }, u.createElement(k.a, { icon: F, className: O.icon }))))); }, t.defaultProps = { isVisibleScrollbar: !0, shouldMeasure: !0 }, t;
    }(u.PureComponent)), j = n(1090), (function (e) { e.SymbolSearch = 'header-toolbar-symbol-search', e.Intervals = 'header-toolbar-intervals', e.ChartStyles = 'header-toolbar-chart-styles', e.Compare = 'header-toolbar-compare', e.Indicators = 'header-toolbar-indicators', e.StudyTemplates = 'header-toolbar-study-templates', e.Alerts = 'header-toolbar-alerts', e.Layouts = 'header-toolbar-layouts', e.SaveLoad = 'header-toolbar-save-load', e.UndoRedo = 'header-toolbar-undo-redo', e.Properties = 'header-toolbar-properties'; }(H || (H = {}))), z = Object(C.isFeatureEnabled)('hide-copy-readonly'), G = (function (e) {
      function t(t, n) { const a = e.call(this, t, n) || this; return a._activateSymbolSearchMode = function () { a._setMode(2); }, a._activateNormalMode = function () { a._setMode(1); }, a._handleInnerMeasure = function (e) { const t = a.props.onWidthChange; t && t(e); }, a._processCustoms = function (e) { const t = a.props.isFake; const n = a.state.mode; const o = a.context.tools; return e.map((e) => { return u.createElement(i, { className: m(n !== 1 && j.hidden) }, u.createElement(o.Custom, c.a({}, e, { isFake: t }))); }); }, a.state = { mode: 1 }, a; } return c.c(t, e), t.prototype.render = function () {
        let e; const t = this.context.tools; const n = this.props; const s = n.features; const l = n.displayMode; const c = n.chartSaver; const d = n.studyMarket; const h = n.readOnly; const p = n.templateSyncEmitter; const f = n.saveLoadSyncEmitter; const v = n.leftCustomButtons; const y = n.rightCustomButtons; const b = n.showScrollbarWhen; const S = n.width; const E = void 0 === S ? 0 : S; const _ = n.isFake; const g = void 0 !== _ && _; const w = this.state.mode; const C = this._processCustoms(v); const M = this._processCustoms(y); const W = b.includes(l); return u.createElement('div', { className: m(j.inner, (e = {}, e[j.fake] = g, e)) }, u.createElement(P, { isVisibleFade: Modernizr.touch && W, isVisibleButtons: !Modernizr.touch && W, isVisibleScrollbar: !1, shouldMeasure: W && !g,
        }, u.createElement(R, { onWidthChange: this._handleInnerMeasure }, !h && u.Children.toArray([t.SymbolSearch && u.createElement(i, { key: 'symbol', className: w === 2 && j.symbolSearch }, u.createElement(t.SymbolSearch, { id: g ? void 0 : H.SymbolSearch, isActionsVisible: s.allowSymbolSearchSpread, isExpanded: w === 2, onFocus: this._activateSymbolSearchMode, onBlur: this._activateNormalMode, maxWidth: E })), t.DateRange && u.createElement(i, { key: 'range' }, u.createElement(t.DateRange, null)), t.Intervals && w === 1 && u.createElement(i, { key: 'intervals' }, u.createElement(t.Intervals, { id: g ? void 0 : H.Intervals, isShownQuicks: s.allowFavoriting, isFavoritingAllowed: s.allowFavoriting, displayMode: l, isFake: g })), t.Bars && w === 1 && u.createElement(i, { key: 'styles' }, u.createElement(t.Bars, { id: g ? void 0 : H.ChartStyles, isShownQuicks: s.allowFavoriting, isFavoritingAllowed: s.allowFavoriting, displayMode: l, isFake: g })), t.Compare && w === 1 && u.createElement(i, { key: 'compare' }, u.createElement(t.Compare, { id: g ? void 0 : H.Compare, className: j.button, displayMode: l })), w === 1 && (t.Compare || t.Indicators) && u.createElement(i, { key: 'study' }, u.createElement('div', { className: j.subGroup }, t.Indicators && u.createElement(t.Indicators, { id: g ? void 0 : H.Indicators, className: j.button, studyMarket: d, displayMode: l }), t.Templates && u.createElement(t.Templates, { id: g ? void 0 : H.StudyTemplates, isShownQuicks: s.allowFavoriting, isFavoritingAllowed: s.allowFavoriting, displayMode: l, stateSyncEmitter: p, isFake: g }))), w === 1 && t.Alert && u.createElement(i, { key: 'alert' }, u.createElement(t.Alert, { id: g ? void 0 : H.Alerts, className: j.button, displayMode: l })), w === 1 && t.AlertReferral && u.createElement(i, { key: 'alert-referral' }, u.createElement(t.AlertReferral, { className: j.button, displayMode: l })), t.Replay && w === 1 && u.createElement(i, { key: 'replay' }, u.createElement(t.Replay, { className: j.button, displayMode: l })), t.UndoRedo && w === 1 && u.createElement(i, { key: 'undo-redo' }, u.createElement(t.UndoRedo, { id: g ? void 0 : H.UndoRedo })), t.ScalePercentage && u.createElement(i, { key: 'percentage' }, u.createElement(t.ScalePercentage, null)), t.ScaleLogarithm && u.createElement(i, { key: 'logarithm' }, u.createElement(t.ScaleLogarithm, null))].concat(C)), w === 1 ? r(u.Children.toArray([h && u.createElement(i, { key: 'view-only-badge' }, u.createElement(o, null)), u.createElement(i, { key: 'gap', className: m(j.fill) }), !h && t.Layout && u.createElement(i, { key: 'layout' }, u.createElement(t.Layout, { id: g ? void 0 : H.Layouts })), t.SaveLoad && !(h && z) && u.createElement(i, { key: 'save-load-right' }, u.createElement(t.SaveLoad, { id: g ? void 0 : H.SaveLoad, chartSaver: c, isReadOnly: h, displayMode: l, isFake: g, stateSyncEmitter: f })), t.SaveLoadReferral && u.createElement(i, { key: 'save-load-referral' }, u.createElement(t.SaveLoadReferral, { isReadOnly: h, displayMode: l })), s.showLaunchInPopupButton && t.OpenPopup && u.createElement(i, { key: 'popup' }, u.createElement(t.OpenPopup, { className: m(j.iconButton, j.popupButton) })), t.Screenshot && s.accentScreenshotButton && u.createElement(i, { key: 'blue-screenshot' }, u.createElement(t.Screenshot, { color: 'blue', className: j.iconButton })), !h && t.Properties && u.createElement(i, { key: 'properties' }, u.createElement(t.Properties, { id: g ? void 0 : H.Properties,
          className: j.iconButton })), !h && t.Fullscreen && u.createElement(i, { key: 'fullscreen' }, u.createElement(t.Fullscreen, null)), t.Screenshot && !s.accentScreenshotButton && u.createElement(i, { key: 'screenshot' }, u.createElement(t.Screenshot, { className: j.iconButton }))].concat(M))) : [u.createElement(i, { key: 'gap', className: m(j.fill, w === 2 && j.minimalPriority) }), u.createElement(i, { key: 'symbol-search-close' }, u.createElement(a, { className: j.iconButton }))])));
      }, t.prototype._setMode = function (e) { this.setState({ mode: e }); }, t.contextTypes = { tools: h.object.isRequired }, t;
    }(u.PureComponent)), Y = n(16), U = n.n(Y), K = n(199), J = (function (e) { function t(t, n, i) { return void 0 === i && (i = []), e.call(this, t, n, 'FAVORITE_CHART_STYLES_CHANGED', 'StyleWidget.quicks', i) || this; } return c.c(t, e), t; }(K.b)), Q = n(61), q = n(204), X = n.n(q), Z = (function (e) { function t(t, n, i) { return e.call(this, t, n, 'FAVORITE_INTERVALS_CHANGED', 'IntervalWidget.quicks', i) || this; } return c.c(t, e), t.prototype._serialize = function (e) { return X()(e.map(Q.normalizeIntervalString)); }, t.prototype._deserialize = function (e) { return X()(Object(Q.convertResolutionsFromSettings)(e).filter(Q.isResolutionMultiplierValid).map(Q.normalizeIntervalString)); }, t; }(K.a)), ee = n(852), te = n(324), ne = n(844), ie = n(108), ae = n(49), oe = n(198), re = n(1091), n.d(t, 'HeaderToolbar', () => { return ue; }), se = { Area: S.STYLE_AREA, Bars: S.STYLE_BARS, Candles: S.STYLE_CANDLES, 'Heiken Ashi': S.STYLE_HEIKEN_ASHI, 'Hollow Candles': S.STYLE_HOLLOW_CANDLES, Line: S.STYLE_LINE }, le = ['1', '30', '60'], ce = [], de = ['full', 'medium'], ue = (function (e) {
      function t(t) { let n; let i; let a; let o; const r = e.call(this, t) || this; return r._templateSyncEmitter = new v.a(), r._saveLoadSyncEmitter = new v.a(), r._handleFullWidthChange = function (e) { r._fullWidth = e, r.setState({ measureValid: !1 }); }, r._handleFavoritesWidthChange = function (e) { r._favoritesWidth = e, r.setState({ measureValid: !1 }); }, r._handleCollapseWidthChange = function (e) { r._collapseWidth = e, r.setState({ measureValid: !1 }); }, r._handleMeasure = function (e) { const t = e.width; r.setState({ availableWidth: t, measureValid: !1 }); }, r._handleEsc = function () { Object(ne.b)(); }, r._showScrollbarWhen = t.allowedModes.slice(-1), n = t.chartWidgetCollection, i = t.chartChangesWatcher, r._chartChangesWatcher = i, a = s(r.props.defaultFavoriteStyles), r._favoriteChartStylesService = new J(ie.TVXWindowEvents, ae, a), o = l(r.props.defaultFavoriteIntervals), r._favoriteIntervalsService = new Z(ie.TVXWindowEvents, ae, o), r.state = { isVisible: !0, availableWidth: 0, displayMode: 'full', measureValid: !1, leftCustomButtons: [], rightCustomButtons: [] }, r._readOnly = n.readOnly(), r._features = { accentScreenshotButton: !!r.props.accentScreenshot, allowFavoriting: y.enabled('items_favoriting'), showIdeasButton: !!r.props.ideas, showLaunchInPopupButton: !!r.props.popupButton, allowSymbolSearchSpread: y.enabled('header_symbol_search') && !y.enabled('charting_library_base'), allowToolbarHiding: y.enabled('collapsible_header') }, r._setDisplayMode = g()(r._setDisplayMode, 100), r._negotiateResizer(), r; } return c.c(t, e), t.prototype.getChildContext = function () {
        const e = this.props; const t = e.tools; const n = e.windowMessageService; const i = e.chartWidgetCollection; const a = e.chartApiInstance; const o = e.availableTimeFrames; return { tools: t,
          isFundamental: e.isFundamental,
          chartWidgetCollection: i,
          windowMessageService: n,
          chartApiInstance: a,
          availableTimeFrames: o,
          favoriteStudyTemplatesService: e.favoriteStudyTemplatesService,
          studyTemplates: e.studyTemplates,
          saveChartService: e.saveChartService,
          loadChartService: e.loadChartService,
          favoriteChartStylesService: this._favoriteChartStylesService,
          favoriteIntervalsService: this._favoriteIntervalsService,
          customIntervalsService: this._customIntervalsService,
          chartChangesWatcher: this._chartChangesWatcher,
          chartWidget: i.activeChartWidget.value() };
      }, t.prototype.componentDidUpdate = function (e, t) { const n = this.state; const i = n.isVisible; const a = n.measureValid; i !== t.isVisible && (b.emit('toggle_header', i), this._negotiateResizer()), a || this._setDisplayMode(); }, t.prototype.render = function () { let e; const t = this.props; const n = (t.resizerBridge, t.allowedModes); const i = c.e(t, ['resizerBridge', 'allowedModes']); const a = this.state; const o = a.displayMode; const r = a.availableWidth; const s = a.isVisible; const l = a.leftCustomButtons; const d = a.rightCustomButtons; const h = c.a({ features: this._features, readOnly: this._readOnly, isFake: !1, templateSyncEmitter: this._templateSyncEmitter, saveLoadSyncEmitter: this._saveLoadSyncEmitter, width: r, leftCustomButtons: l, rightCustomButtons: d }, i); const f = c.a({}, h, { isFake: !0, showScrollbarWhen: ce }); return u.createElement('div', { className: m(re.toolbar, (e = {}, e[re.isHidden] = !s, e)) }, u.createElement('div', { className: re.overflowWrap }, u.createElement(p, { onMeasure: this._handleMeasure, whitelist: ['width'] }, u.createElement(G, c.a({ showScrollbarWhen: this._showScrollbarWhen, displayMode: o }, h))), n.includes('full') && u.createElement(G, c.a({ displayMode: 'full', onWidthChange: this._handleFullWidthChange }, f)), n.includes('medium') && u.createElement(G, c.a({ displayMode: 'medium', onWidthChange: this._handleFavoritesWidthChange }, f)), n.includes('small') && u.createElement(G, c.a({ displayMode: 'small', onWidthChange: this._handleCollapseWidthChange }, f))), u.createElement(ee.a, { keyCode: te.a.Escape, handler: this._handleEsc })); }, t.prototype.addButton = function (e) { let t; let n; let i; let a; let o; let r; return void 0 === e && (e = 'left'), t = new U.a(0), n = $(`<div class="apply-common-tooltip ${re.customButton}">`)[0], i = { key: +new Date(), element: n, width: t }, a = this.state, o = a.leftCustomButtons, r = a.rightCustomButtons, e === 'left' ? this.setState({ leftCustomButtons: o.concat([i]) }) : this.setState({ rightCustomButtons: r.concat([i]) }), n; }, t.prototype._negotiateResizer = function () { this.props.resizerBridge.negotiateHeight(this.state.isVisible ? oe.HEADER_TOOLBAR_HEIGHT_EXPANDED : oe.HEADER_TOOLBAR_HEIGHT_COLLAPSED); }, t.prototype._setDisplayMode = function () { let e; let t; const n = this.state.availableWidth; const i = this.props.allowedModes; const a = (e = {}, e.full = this._fullWidth, e.medium = this._favoritesWidth, e.small = this._collapseWidth, e); const o = i.map((e) => { return a[e]; }); let r = o.findIndex((e) => { return n >= e; }); r === -1 && (r = i.length - 1), t = i[r], this.setState({ measureValid: !0, displayMode: t }); }, t.childContextTypes = { tools: h.object.isRequired,
        isFundamental: h.bool,
        chartApiInstance: h.object,
        availableTimeFrames: h.func,
        chartWidgetCollection: h.object,
        windowMessageService: h.object,
        favoriteChartStylesService: h.object,
        favoriteIntervalsService: h.object,
        customIntervalsService: h.object,
        favoriteStudyTemplatesService: h.object,
        studyTemplates: h.object,
        chartChangesWatcher: h.object,
        saveChartService: h.object,
        loadChartService: h.object,
        chartWidget: h.object }, t.defaultProps = { allowedModes: de }, t;
    }(u.PureComponent));
  },
  844: function (e, t, n) {
    function i() { p.fire(); } let a; let o; let r; let s; let l; let c; let d; let u; let h; let p; n.d(t, 'a', () => { return h; }), t.b = i, a = n(1), o = n(20), n.n(o), r = n(103), n.n(r), s = n(7), n.n(s), l = n(50), c = n(871), n.n(c), d = n(8), u = n.n(d), h = (function (e) { function t(t) { const n = e.call(this, t) || this; return n._containerRef = null, n._scrollWrapRef = null, n._handleContainerRef = function (e) { return n._containerRef = e; }, n._handleScrollWrapRef = function (e) { return n._scrollWrapRef = e; }, n._handleMeasure = function () { let e; let t; let i; let a; let o; let r; let c; let d; let u; let h; let p; let m; let f; let v; let y; let b; let S; n.state.isMeasureValid || (e = n.props.position, t = Object(s.ensureNotNull)(n._containerRef), i = t.getBoundingClientRect(), a = document.documentElement.clientHeight, o = document.documentElement.clientWidth, r = a - 10, c = i.height > r, c && (d = Object(s.ensureNotNull)(n._scrollWrapRef), d.style.overflowY = 'scroll', i = t.getBoundingClientRect()), u = i.width, h = i.height, p = typeof e === 'function' ? e(u, h) : e, m = 5, f = o - u - 5, v = Object(l.clamp)(p.x, m, Math.max(m, f)), y = 5, b = a - h - 5, S = Object(l.clamp)(p.y, y, Math.max(y, b)), n.setState({ appearingMenuHeight: c ? r : void 0, appearingMenuWidth: p.overrideWidth, appearingPosition: { x: v, y: S }, isMeasureValid: !0 })); }, n._handleGlobalClose = function () { n.props.onClose(); }, n.state = {}, n; } return a.c(t, e), t.prototype.componentWillReceiveProps = function (e) { this.props.isOpened && !e.isOpened && this.setState({ isMeasureValid: void 0 }); }, t.prototype.componentDidMount = function () { this._handleMeasure(), p.subscribe(this, this._handleGlobalClose); }, t.prototype.componentDidUpdate = function () { this._handleMeasure(); }, t.prototype.componentWillUnmount = function () { p.unsubscribe(this, this._handleGlobalClose); }, t.prototype.render = function () { let e; const t = this.props; const n = t.children; const i = t.minWidth; const a = t.theme; const s = void 0 === a ? c : a; const l = t.className; const d = this.state; const u = d.appearingMenuHeight; const h = d.appearingMenuWidth; const p = d.appearingPosition; const m = d.isMeasureValid; return o.createElement('div', { className: r(l, s.menuWrap, (e = {}, e[s.isMeasuring] = !m, e)), style: { height: u, left: p && p.x, minWidth: i, position: 'fixed', top: p && p.y, width: h }, ref: this._handleContainerRef }, o.createElement('div', { className: s.scrollWrap, style: { overflowY: void 0 !== u ? 'scroll' : 'auto' }, ref: this._handleScrollWrapRef }, o.createElement('div', { className: s.menuBox }, n))); }, t; }(o.PureComponent)), p = new u.a();
  },
  848: function (e, t, n) {
    function i(e) {
      let t; const n = e.icon; const i = e.isActive; const c = e.isOpened; const d = e.isDisabled; const u = e.onClick; const h = e.text; const p = e.textBeforeIcon; const m = e.title; const f = e.theme; const v = void 0 === f ? l : f; const y = e.className; const b = e.forceInteractive; const S = a.e(e, ['icon', 'isActive', 'isOpened', 'isDisabled', 'onClick', 'text', 'textBeforeIcon', 'title', 'theme', 'className', 'forceInteractive']); const E = r(y, v.button, m && 'apply-common-tooltip', (t = {}, t[v.isActive] = i, t[v.isOpened] = c, t[v.isInteractive] = (b || !!u) && !d, t[v.isDisabled] = d, t)); const _ = n && (typeof n === 'string' ? o.createElement(s.a, { className: v.icon, icon: n }) : o.cloneElement(n, { className: v.icon })); return o.createElement('div', a.a({}, S, {
        className: E, onClick: d ? void 0 : u, title: m }), p && h && o.createElement('div', { className: r('js-button-text', v.text) }, h), _, !p && h && o.createElement('div', { className: r('js-button-text', v.text) }, h));
    } let a; let o; let r; let s; let l; t.a = i, a = n(1), o = n(20), n.n(o), r = n(103), n.n(r), s = n(300), l = n(855), n.n(l);
  },
  852: function (e, t, n) {
    let i; let a; let o; n.d(t, 'a', () => { return o; }), i = n(1), a = n(20), n.n(a), o = (function (e) { function t() { const t = e !== null && e.apply(this, arguments) || this; return t._handleKeyDown = function (e) { e.keyCode === t.props.keyCode && t.props.handler(e); }, t; } return i.c(t, e), t.prototype.componentDidMount = function () { document.addEventListener('keydown', this._handleKeyDown, !1); }, t.prototype.componentWillUnmount = function () { document.removeEventListener('keydown', this._handleKeyDown, !1); }, t.prototype.render = function () { return null; }, t; }(a.PureComponent));
  },
  855: function (e, t) { e.exports = { button: 'button-2ioYhFEY-', isInteractive: 'isInteractive-20uLObIc-', hovered: 'hovered-3perbaxJ-', isActive: 'isActive-22S-lGpa-', isOpened: 'isOpened-p-Ume5l9-', isDisabled: 'isDisabled-1_tmrLfP-', text: 'text-1sK7vbvh-', icon: 'icon-beK_KS0k-' }; },
  871: function (e, t) { e.exports = { menuWrap: 'menuWrap-1gEtmoET-', isMeasuring: 'isMeasuring-FZ0EJCM2-', scrollWrap: 'scrollWrap-1B5MfTJt-', menuBox: 'menuBox-20sJGjtG-', isHidden: 'isHidden-2vLQpR1t-' }; },
  885: function (e, t) { e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" width="28" height="28"><g><path fill-rule="nonzero" d="M4.034 14.18l-.07-.18.07-.18c1.535-3.975 5.645-6.82 9.966-6.82 4.32 0 8.431 2.845 9.966 6.82l.07.18-.07.18c-1.535 3.975-5.646 6.82-9.966 6.82-4.321 0-8.431-2.845-9.966-6.82zm9.966 5.82c3.84 0 7.521-2.503 8.962-6-1.441-3.497-5.122-6-8.962-6-3.841 0-7.521 2.503-8.962 6 1.441 3.497 5.121 6 8.962 6z"/><path d="M11 14.001c0 1.66 1.341 2.999 3.001 2.999s2.999-1.339 2.999-2.999c0-1.66-1.339-3.001-2.999-3.001-1.66 0-3.001 1.341-3.001 3.001z"/></g></svg>'; },
  990: function (e, t) { e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 10" width="20" height="10"><path fill="none" stroke="currentColor" stroke-width="1.5" d="M2 1l8 8 8-8"/></svg>'; } });
